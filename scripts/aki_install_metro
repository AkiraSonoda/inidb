#!/bin/bash
#
# THIS SOFTWARE IS PROVIDED BY THE DEVELOPERS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Dieses Script installiert die aktuelle OpenSimulator Software in das 
# entsprechende Simulator Verzeichnis 
#
# Voraussetzungen:  Die neue OpenSimulator Software ist gebaut
#                   Der Simulator ist gestoppt
# 
# Den Simulator anschliessend zu starten ist nicht Teil dieses Scripts
#
# (c) Akira Sonoda, 2012
# Version: 1.0
#
# SCREENID = Name des Simulators
SCREENID=$1
test_version=$2
# Where ist der Simulator installiert?
OSINS="/home/opensim"
# Wo ist das Verzeichnis mit den Backups?
OSBAK="/home/opensim/backup"

cd $OSINS

# Lesen der Dateien "metro_build_version.txt" ( Die Versionsnummer des gebauten Simulators )
# in die entsprechende Variable.
build_version=$(cat metro_build_version.txt)
# Lesen der Dateien "metro_old_version.txt" ( Die Versionsnummer des laufenden Simulators )
# in die entsprechende Variable.
old_version=$(cat metro_old_version.txt)

# Vergleich der beiden Variablen. Falls beide Versionen identisch sind
# wird das Script verlassen
if [ "$old_version" == "$build_version" ] && [ "$test_version" == "" ]; then
  exit
fi

# Getting the newest root certificates
mozroots --import --sync 


# Ueberprüfen ob der Simulator noch läuft 
# Das geschieht mit dieser Befehlskette. Wenn der Prozess
# noch am laufen ist, wird die Variable "running" einen Inhalt haben
# ansonsten wird sie leer sein. 
running=`ps ax|grep $SCREENID|grep -v grep|grep -v "aki_install"`

echo $running

# Die Variable running hat einen Inhalt, also stoppen wir den 
# Process mit dem üblichen Verfahren.
if [ -n "$running" ]; then
   /home/opensim/bin/aki_sim_graceless $SCREENID stop
fi

# Offensichtlich sind die Versionen nicht identisch wir machen eine vollständige
# Sicherung des Simulators.
# Falls bereits ein alter vollständiger Backup des Simulators besteht, wird der
# alte Backup nun gelöscht. Die wichtigsten Daten sind sowieso schon zuvor gesichert worden.
if [ -d "$OSBAK/$SCREENID/$SCREENID" ] ; then
   echo "removing old opensim backup in: "
   cd $OSBAK/$SCREENID
   pwd
   rm -r -f $SCREENID
fi

cd $OSINS
mv $SCREENID $OSBAK/$SCREENID

# Erstellen eines neuen Verzeichnisses mit dem Namen welcher in $SCREENID steht
mkdir $SCREENID

# Kopieren des "bin" Verzeichnisses aus dem Verzeichnis der neu gebauten Simulator Software
# in das neu erstellte Simulatoren Verzeichnis
if [ "$test_version" != "" ] ; then
	cp -r /home/opensim/$test_version/bin "$OSINS/$SCREENID"
	echo $test_version > $OSINS/$SCREENID/bin/.version
else
	cp -r /home/opensim/$build_version/bin "$OSINS/$SCREENID"
	echo $build_version > $OSINS/$SCREENID/bin/.version
fi
	
# Das Regions Verzeichnis im "bin" des neuen Simulators löschen
rm -r -f $OSINS/$SCREENID/bin/Regions

# Aus dem Backup den gesamten Regions Ordner in das "bin" Verzeichnis des 
# neuen Simulators kopieren
cp -r $OSBAK/$SCREENID/$SCREENID/bin/Regions $OSINS/$SCREENID/bin

# Die beiden wichtigen Datenbanken aus dem "bin" Verzeichnis des backups
# in das Verzeichnis des neuen Simulators kopieren
# cp $OSBAK/$SCREENID/$SCREENID/bin/OpenSim.db $OSINS/$SCREENID/bin
if [ -e "$OSBAK/$SCREENID/$SCREENID/bin/LocalUserStatistics.db" ] ; then
	cp $OSBAK/$SCREENID/$SCREENID/bin/LocalUserStatistics.db $OSINS/$SCREENID/bin
fi

if [ "$test_version" != "" ] ; then
  cp $OSINS/$test_version/doc/log4net/OpenSim.exe.config $OSINS/$SCREENID/bin
  cp $OSINS/$test_version/doc/log4net/OpenSim.32BitLaunch.exe.config $OSINS/$SCREENID/bin
  cp $OSINS/$test_version/doc/metropolis/ini/OpenSim.ini $OSINS/$SCREENID/bin
  cp $OSINS/$test_version/doc/metropolis/ini/config-include/Grid.ini $OSINS/$SCREENID/bin/config-include
  cp $OSINS/$test_version/doc/metropolis/ini/config-include/GridCommon.ini $OSINS/$SCREENID/bin/config-include
  cp $OSINS/$test_version/doc/metropolis/ini/config-include/GridHypergrid.ini $OSINS/$SCREENID/bin/config-include
  cp $OSINS/$test_version/doc/metropolis/ini/config-include/FlotsamCache.ini $OSINS/$SCREENID/bin/config-include
else
  cp $OSINS/$build_version/doc/log4net/OpenSim.exe.config $OSINS/$SCREENID/bin
  cp $OSINS/$build_version/doc/log4net/OpenSim.32BitLaunch.exe.config $OSINS/$SCREENID/bin
  cp $OSINS/$build_version/doc/metropolis/ini/OpenSim.ini $OSINS/$SCREENID/bin
  cp $OSINS/$build_version/doc/metropolis/ini/config-include/Grid.ini $OSINS/$SCREENID/bin/config-include
  cp $OSINS/$build_version/doc/metropolis/ini/config-include/GridCommon.ini $OSINS/$SCREENID/bin/config-include
  cp $OSINS/$build_version/doc/metropolis/ini/config-include/GridHypergrid.ini $OSINS/$SCREENID/bin/config-include
  cp $OSINS/$build_version/doc/metropolis/ini/config-include/FlotsamCache.ini $OSINS/$SCREENID/bin/config-include	
fi
